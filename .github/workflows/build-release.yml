name: Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
  pull_request:
    branches:
      - main

env:
  BUN_VERSION: "latest"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Type check
        run: bun x tsc --noEmit

      - name: Build TAP executables for all targets
        run: |
          mkdir -p dist

          # Build for modern platforms
          bun build --compile --target=bun-linux-x64 --outfile=dist/tap-linux-x64 src/main.ts
          bun build --compile --target=bun-linux-arm64 --outfile=dist/tap-linux-arm64 src/main.ts
          bun build --compile --target=bun-windows-x64 --outfile=dist/tap-windows-x64.exe src/main.ts
          bun build --compile --target=bun-darwin-arm64 --outfile=dist/tap-macos-arm64 src/main.ts

      - name: Create build info
        run: |
          echo "Build Information" > dist/BUILD_INFO.txt
          echo "=================" >> dist/BUILD_INFO.txt
          echo "Version: ${{ github.ref_name || github.sha }}" >> dist/BUILD_INFO.txt
          echo "Targets: linux-x64, linux-arm64, windows-x64, macos-arm64" >> dist/BUILD_INFO.txt
          echo "OS: ubuntu-latest" >> dist/BUILD_INFO.txt
          echo "Built: $(date)" >> dist/BUILD_INFO.txt
          echo "Bun Version: ${{ env.BUN_VERSION }}" >> dist/BUILD_INFO.txt

      - name: Upload Linux x64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: tap-linux-x64
          path: dist/tap-linux-x64
          retention-days: 30

      - name: Upload Linux ARM64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: tap-linux-arm64
          path: dist/tap-linux-arm64
          retention-days: 30

      - name: Upload Windows x64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: tap-windows-x64.exe
          path: dist/tap-windows-x64.exe
          retention-days: 30

      - name: Upload macOS ARM64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: tap-macos-arm64
          path: dist/tap-macos-arm64
          retention-days: 30

      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: BUILD_INFO.txt
          path: dist/BUILD_INFO.txt
          retention-days: 30

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets

          # Move executables to release-assets
          cp artifacts/tap-linux-x64/tap-linux-x64 release-assets/
          cp artifacts/tap-linux-arm64/tap-linux-arm64 release-assets/
          cp artifacts/tap-windows-x64.exe/tap-windows-x64.exe release-assets/
          cp artifacts/tap-macos-arm64/tap-macos-arm64 release-assets/
          cp artifacts/BUILD_INFO.txt/BUILD_INFO.txt release-assets/

          cd release-assets

          # Create checksums (exclude BUILD_INFO.txt from checksums)
          sha256sum tap-* > checksums.txt

          # List what we're releasing
          echo "Release assets:"
          ls -la

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'rc') }}
          generate_release_notes: true
          body: |
            ## TAP - Testing Assistant Project

            ### Installation

            **Homebrew (macOS - Recommended):**
            ```bash
            brew install --formula https://raw.githubusercontent.com/${{ github.repository }}/main/Formula/tap.rb
            ```

            **Quick Install (Linux/macOS):**
            ```bash
            curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash
            ```

            **Manual Installation:**
            1. Download the appropriate binary for your platform
            2. Make it executable: `chmod +x tap-*`
            3. Move to PATH: `sudo mv tap-* /usr/local/bin/tap`

            ### Supported Platforms
            - **Linux**: x64, ARM64
            - **Windows**: x64
            - **macOS**: ARM64 (Apple Silicon)

            ### What's Included
            - `tap`: Main CLI executable
            - `checksums.txt`: SHA256 checksums for verification

            ### Usage
            ```bash
            # Setup configuration
            tap setup

            # Test a GitHub PR
            tap generate-tests https://github.com/owner/repo/pull/123

            # Execute refined scenarios
            tap execute-scenarios --file ./scenarios.json
            ```

            **Note**: These are standalone executables with no dependencies on Node.js or Bun.

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
